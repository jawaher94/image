package org.example;
import java.awt.Color;
import java.awt.image.BufferedImage;

public class Posterize {
    public static BufferedImage applyPosterizeEffect(BufferedImage originalImage, int levels) {
        int width = originalImage.getWidth();
        int height = originalImage.getHeight();
        BufferedImage posterizedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);

        int[] thresholds = new int[levels];
        for (int i = 0; i < levels; i++) {
            thresholds[i] = 255 / (levels - 1) * i;
        }

        for (int y = 0; y < height; y++) {
            for (int x = 0; x < width; x++) {
                Color originalColor = new Color(originalImage.getRGB(x, y));

                int red = findClosestLevel(originalColor.getRed(), thresholds);
                int green = findClosestLevel(originalColor.getGreen(), thresholds);
                int blue = findClosestLevel(originalColor.getBlue(), thresholds);

                Color posterizedColor = new Color(red, green, blue);
                posterizedImage.setRGB(x, y, posterizedColor.getRGB());
            }
        }

        return posterizedImage;
    }

    private static int findClosestLevel(int colorValue, int[] thresholds) {
        int closest = thresholds[0];
        for (int i = 1; i < thresholds.length; i++) {
            if (Math.abs(colorValue - thresholds[i]) < Math.abs(colorValue - closest)) {
                closest = thresholds[i];
            }
        }
        return closest;
    }
}
